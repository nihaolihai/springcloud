这是nacos配置中心模块，端口3377

    依赖
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- 图形化 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.demo.springcloud</groupId>
            <artifactId>cloud-api-commons</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-commons</artifactId>
            <version>2.2.1.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
        </dependency>
    </dependencies>

    配置
    spring:
      #服务别名，注册到eureka服务名称
      application:
        name: cloud-nacos-config
      cloud:
        nacos:
          discovery:
            server-addr: localhost:8848 #设置nacos地址
          config:
            server-addr: localhost:8848 #设置nacos地址
            file-extension: yaml # 指定yaml文件配置

    运行
   @SpringBootApplication
   @EnableEurekaClient
   public class ConfigClient3355 {
       public static void main(String[] ares){
           SpringApplication.run(ConfigClient3355.class,ares);
       }
   }

    调用
    @RestController
    @RefreshScope//支持nacos动然刷新功能
    public class NacosConfigController {

        @Value("${config.info}")
        private String serverinfo;

        @GetMapping(value = "/configinfo")
        public String getServerInfo(){
            return serverinfo;
        }
    }

nacos服务配置新增：cloud-nacos-config-dev.yaml
选择yaml输入 config:info: nacos-dev