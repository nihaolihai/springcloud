这是nacos消费者模块，端口83
    依赖
    <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
            </dependency>
            <!-- 图形化 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-actuator</artifactId>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-devtools</artifactId>
                <scope>runtime</scope>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.demo.springcloud</groupId>
                <artifactId>cloud-api-commons</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-commons</artifactId>
                <version>2.2.1.RELEASE</version>
            </dependency>
        </dependencies>

    配置
    spring:
      application:
        name: cloud-nacos-consumer
      cloud:
        nacos:
          discovery:
            server-addr: localhost:8848 #设置nacos地址

    service-url:
      nacos-user-serive: http://cloud-nacos-provider


    @SpringBootApplication
    @EnableDiscoveryClient
    public class NacosConsumerDemoApplication83 {

        public static void main(String[] args) {
            SpringApplication.run(NacosConsumerDemoApplication83.class, args);
        }

    }

    @Configuration
    public class ApplicationContextBean {

        @Bean
        @LoadBalanced
        public RestTemplate getRestTemplate(){
            return new RestTemplate();
        }

    }

    @RestController
    public class NacosOrderController {

        @Resource
        private RestTemplate restTemplate;

        @Value("${service-url.nacos-user-serive}")
        private String serverUrl;

        @GetMapping(value = "/consumernacos/echo/{string}")
        public String echo(@PathVariable String string) {

            return restTemplate.getForObject(serverUrl+"/providernacos/echo/"+string,String.class)+"consumerHello Nacos Discovery " + string;
        }
    }